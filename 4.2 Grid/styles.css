/* % global rules to normalise all the the rules that target all elements */

*,
::before,
::after {
  padding: 0;
  margin: 0;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
}

body {
  font-family: Baskervville, serif;
  color: linen;
  background-color: rgb(20, 30, 40);
}

h1 {
  font-family: "Anton", sans-serif;
}

h2,
h3,
h4,
h5,
h6 {
  font-family: "Raleway", sans-serif;
}

a {
  text-decoration: none;
  color: linen;
}

main {
  display: grid;
  grid-template-columns: minmax(2rem, 1fr) minmax(min-content, 94rem) minmax(2rem, 1fr);
  /* !min max to make the columns responsive on any device */
  row-gap: 3rem;
}

img {
  width: 100%;
  object-fit: cover;
  /* ! ^object fit property tells the broswer how to position the element within its container. Cover will set the image to fill the container and crop to avoid changing the aspect ratio */
}

hr {
  margin: 1.5rem 0;
  /* ! to adjust a hr you need to adjust the border property */
  border: 1px solid rgba(120, 120, 120, 0.6);
}

.heading {
  grid-column: 2 / 3;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  row-gap: 1.5rem;
}

.text {
  grid-column: 2 / 3;
  font-size: 1.8rem;
  letter-spacing: 0.6px;
  column-width: 25rem;
  text-align: justify;
}

.hero {
  grid-column: 1/-1;
  position: relative;
}

.hero-title {
  text-align: center;
  color: orangered;
  font-size: 8rem;
}

.hero-subtitle {
  font-size: 2.4rem;
  text-align: center;
  color: orangered;
}

.author {
  font-size: 2rem;
  font-family: Raleway, sans-serif;
}

.author-name a:hover {
  background-color: #306203;
}

.publish-date {
  color: rgba(255, 255, 255, 0.5);
}

.social-icons {
  display: grid;
  font-size: 3rem;
  grid-template-columns: repeat(5, 1fr);
  grid-auto-flow: column;
  /* ! ^If you wanted to add more social icons, but keep them on the same row, you would need to update grid-template-columns to create additional columns. As an alternative, you can use the grid-auto-flow property. */

  /* % the autoplacement algorithm will kick in when you add a new icon element. However, the algorithm defaults the new column width to be auto, which will not match your current columns. override this with the grid-auto-columns property. Give the .social-icons selector a grid-auto-columns property set to 1fr */
  grid-auto-columns: 1fr;
  align-items: center;
}

/* *targetting the first letter in the text of an element */
.first-paragraph::first-letter {
  font-size: 6rem;
  color: orangered;
  /* ! since the^ has shifted the other text out of place, we have to impose the 2 rules from below. */
  float: left;
  margin-right: 1rem;
}

.quote {
  color: #00beef;
  font-size: 2.4rem;
  text-align: center;
  font-family: "Raleway", sans-serif;
}

.quote::before {
  content: '" ';
}

.quote::after {
  content: ' "';
}

.text-with-images {
  display: grid;
  /* ! ^will override the global grid display settings since it is lower down the file */
  grid-template-columns: 1fr 2fr;
  column-gap: 3rem;
  margin-bottom: 3rem;
}

.lists {
  list-style-type: none;
  margin-top: 2rem;
}

.lists li {
  margin-bottom: 1.5rem;
}

.list-title,
.list-subtitle {
  color: #00beef;
}

.image-wrapper {
  display: grid;
  grid-template-columns: 2fr 1fr;
  grid-template-rows: repeat(3, min-content);
  /* ! ^  give our grid rows that adjust in height based on the content, but columns that remain a fixed width based on the container. */
  gap: 2rem;
  /* ! ^to set both the row gap and column gap */
  place-items: center;
}

.image-1,
.image-3 {
  grid-column: 1/ -1;
  /* ! ^ allow the first and third images to span the full width of the grid. */
}

@media only screen and (max-width: 720px) {
  .image-wrapper {
    grid-template-columns: 1fr;
  }
}

@media only screen and (max-width: 600px) {
  .text-with-images {
    grid-template-columns: 1fr;
  }
}

@media only screen and (max-width: 550px) {
  .hero-title {
    font-size: 6rem;
  }
  .hero-subtitle,
  .author,
  .quote,
  .list-title {
    font-size: 1.8rem;
  }
  .social-icons {
    font-size: 2rem;
  }
  .text {
    font-size: 1.6rem;
  }
}

@media only screen and (max-width: 420px) {
  .hero-title {
    font-size: 4.5rem;
  }
}
